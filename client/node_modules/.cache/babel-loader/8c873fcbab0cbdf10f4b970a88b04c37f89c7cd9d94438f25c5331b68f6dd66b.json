{"ast":null,"code":"var _jsxFileName = \"/home/shri/projects/blockchain-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorageABI = require('./SimpleStorage.json').abi;\nconst SimpleStorageAddress = '0xFc718FB543A243108b7082C9b8a8E0af4b43FF68';\nconst ganacheUrl = 'http://localhost:7545';\nconst httpProvider = new Web3.providers.HttpProvider(ganacheUrl);\nconst web3 = new Web3(httpProvider);\nconst simpleStorageContract = new web3.eth.Contract(SimpleStorageABI, SimpleStorageAddress);\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  const fetchData = async () => {\n    const result = await simpleStorageContract.methods.getData().call();\n    setData(result);\n  };\n  const setDataOnChain = async () => {\n    const accounts = await web3.eth.getAccounts();\n    await simpleStorageContract.methods.setData(123).send({\n      from: accounts[0]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data from Smart Contract: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setDataOnChain,\n      children: \"Set Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C23+RLRwI6JvI86s3uCPD/CulQc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Web3","jsxDEV","_jsxDEV","SimpleStorageABI","require","abi","SimpleStorageAddress","ganacheUrl","httpProvider","providers","HttpProvider","web3","simpleStorageContract","eth","Contract","App","_s","data","setData","fetchData","result","methods","getData","call","setDataOnChain","accounts","getAccounts","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shri/projects/blockchain-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Web3 from 'web3';\n\nconst SimpleStorageABI = require('./SimpleStorage.json').abi; \nconst SimpleStorageAddress = '0xFc718FB543A243108b7082C9b8a8E0af4b43FF68'; \n\nconst ganacheUrl = 'http://localhost:7545';\nconst httpProvider = new Web3.providers.HttpProvider(ganacheUrl);\nconst web3 = new Web3(httpProvider);\n\nconst simpleStorageContract = new web3.eth.Contract(SimpleStorageABI, SimpleStorageAddress);\n\nfunction App() {\n  const [data, setData] = useState('');\n\n  const fetchData = async () => {\n    const result = await simpleStorageContract.methods.getData().call();\n    setData(result);\n  };\n\n  const setDataOnChain = async () => {\n    const accounts = await web3.eth.getAccounts();\n    await simpleStorageContract.methods.setData(123).send({ from: accounts[0] });\n  };\n\n  return (\n    <div>\n      <h1>Blockchain App</h1>\n      <button onClick={fetchData}>Fetch Data</button>\n      <p>Data from Smart Contract: {data}</p>\n      <button onClick={setDataOnChain}>Set Data</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,sBAAsB,CAAC,CAACC,GAAG;AAC5D,MAAMC,oBAAoB,GAAG,4CAA4C;AAEzE,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,YAAY,GAAG,IAAIR,IAAI,CAACS,SAAS,CAACC,YAAY,CAACH,UAAU,CAAC;AAChE,MAAMI,IAAI,GAAG,IAAIX,IAAI,CAACQ,YAAY,CAAC;AAEnC,MAAMI,qBAAqB,GAAG,IAAID,IAAI,CAACE,GAAG,CAACC,QAAQ,CAACX,gBAAgB,EAAEG,oBAAoB,CAAC;AAE3F,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAG,MAAMR,qBAAqB,CAACS,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACnEL,OAAO,CAACE,MAAM,CAAC;EACjB,CAAC;EAED,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACE,GAAG,CAACa,WAAW,CAAC,CAAC;IAC7C,MAAMd,qBAAqB,CAACS,OAAO,CAACH,OAAO,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MAAEC,IAAI,EAAEH,QAAQ,CAAC,CAAC;IAAE,CAAC,CAAC;EAC9E,CAAC;EAED,oBACEvB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA;MAAQgC,OAAO,EAAEf,SAAU;MAAAU,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C/B,OAAA;MAAA2B,QAAA,GAAG,4BAA0B,EAACZ,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC/B,OAAA;MAAQgC,OAAO,EAAEV,cAAe;MAAAK,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACjB,EAAA,CArBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}