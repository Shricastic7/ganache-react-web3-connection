{"ast":null,"code":"var _jsxFileName = \"/home/shri/projects/blockchain-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport ContractABI from './SimpleStorage.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3Instance = new Web3(window.ethereum);\n        setWeb3(web3Instance);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          const contractInstance = new web3Instance.eth.Contract(ContractABI, '0xa5dE248Dc33104D7B0A4F3D8f23ECf6592e95ffc');\n          setContract(contractInstance);\n        } catch (error) {\n          console.error('User denied account access');\n        }\n      } else {\n        console.error('Please install MetaMask extension');\n      }\n    };\n    initWeb3();\n  }, []);\n\n  // Function to interact with smart contract\n  const callSmartContractFunction = async () => {\n    if (contract) {\n      // Call your smart contract functions here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"WpCmpy6NJHjwmNqoUHOvWLfLLk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","ContractABI","jsxDEV","_jsxDEV","App","_s","web3","setWeb3","contract","setContract","initWeb3","window","ethereum","web3Instance","enable","contractInstance","eth","Contract","error","console","callSmartContractFunction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shri/projects/blockchain-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport ContractABI from './SimpleStorage.json';\n\nconst App = () => {\n    const [web3, setWeb3] = useState(null);\n    const [contract, setContract] = useState(null);\n\n    useEffect(() => {\n        const initWeb3 = async () => {\n            if (window.ethereum) {\n                const web3Instance = new Web3(window.ethereum);\n                setWeb3(web3Instance);\n\n                try {\n                    // Request account access if needed\n                    await window.ethereum.enable();\n                    const contractInstance = new web3Instance.eth.Contract(ContractABI, '0xa5dE248Dc33104D7B0A4F3D8f23ECf6592e95ffc');\n                    setContract(contractInstance);\n                } catch (error) {\n                    console.error('User denied account access');\n                }\n            } else {\n                console.error('Please install MetaMask extension');\n            }\n        };\n\n        initWeb3();\n    }, []);\n\n    // Function to interact with smart contract\n    const callSmartContractFunction = async () => {\n        if (contract) {\n            // Call your smart contract functions here\n        }\n    };\n\n    return (\n        <div>\n            {/* Your React component content */}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACjB,MAAMC,YAAY,GAAG,IAAIb,IAAI,CAACW,MAAM,CAACC,QAAQ,CAAC;QAC9CL,OAAO,CAACM,YAAY,CAAC;QAErB,IAAI;UACA;UACA,MAAMF,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC,CAAC;UAC9B,MAAMC,gBAAgB,GAAG,IAAIF,YAAY,CAACG,GAAG,CAACC,QAAQ,CAAChB,WAAW,EAAE,4CAA4C,CAAC;UACjHQ,WAAW,CAACM,gBAAgB,CAAC;QACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACJ,CAAC,MAAM;QACHC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC;MACtD;IACJ,CAAC;IAEDR,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAIZ,QAAQ,EAAE;MACV;IAAA;EAER,CAAC;EAED,oBACIL,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAACnB,EAAA,CAtCID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}