{"ast":null,"code":"var _jsxFileName = \"/home/shri/projects/blockchain-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorageABI = require('./SimpleStorage.json');\nconst ganacheUrl = 'http://127.0.0.1:7545';\nconst SimpleStorageAddress = '0x63631549432302123d49d3093499790e26ca27eA';\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  const [inputData, setInputData] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(ganacheUrl);\n        const web3Instance = new Web3(provider);\n        setWeb3(web3Instance);\n        const simpleStorageContract = new web3Instance.eth.Contract(SimpleStorageABI.abi, SimpleStorageAddress);\n        setContract(simpleStorageContract);\n        console.log('Connected to blockchain network');\n      } catch (error) {\n        console.error('Error initializing web3:', error);\n      }\n    };\n    initializeWeb3();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const result = await contract.methods.getData().call();\n      console.log('Data from smart contract:', result);\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const setDataOnChain = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.setData(inputData).send({\n        from: accounts[0]\n      });\n      fetchData();\n    } catch (error) {\n      console.error('Error setting data:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setInputData(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data from Smart Contract:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputData,\n      onChange: handleInputChange,\n      placeholder: \"Enter data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setDataOnChain,\n      children: \"Set Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), console.log('Data state:', data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zhYGanG4bTJVdGHmBJWyqXQljq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","SimpleStorageABI","require","ganacheUrl","SimpleStorageAddress","App","_s","data","setData","inputData","setInputData","web3","setWeb3","contract","setContract","initializeWeb3","provider","providers","HttpProvider","web3Instance","simpleStorageContract","eth","Contract","abi","console","log","error","fetchData","result","methods","getData","call","setDataOnChain","accounts","getAccounts","send","from","handleInputChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/shri/projects/blockchain-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nconst SimpleStorageABI = require('./SimpleStorage.json');\n\nconst ganacheUrl = 'http://127.0.0.1:7545';\nconst SimpleStorageAddress = '0x63631549432302123d49d3093499790e26ca27eA';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [inputData, setInputData] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(ganacheUrl);\n        const web3Instance = new Web3(provider);\n        setWeb3(web3Instance);\n        const simpleStorageContract = new web3Instance.eth.Contract(\n          SimpleStorageABI.abi,\n          SimpleStorageAddress\n        );\n        setContract(simpleStorageContract);\n\n        console.log('Connected to blockchain network'); \n      } catch (error) {\n        console.error('Error initializing web3:', error);\n      }\n    };\n    initializeWeb3();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const result = await contract.methods.getData().call();\n      console.log('Data from smart contract:', result);\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const setDataOnChain = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.setData(inputData).send({ from: accounts[0] });\n      fetchData(); \n    } catch (error) {\n      console.error('Error setting data:', error);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputData(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Blockchain App</h1>\n      <button onClick={fetchData}>Fetch Data</button>\n      <p>Data from Smart Contract:</p>\n      <p>{data}</p>\n      <input\n        type=\"text\"\n        value={inputData}\n        onChange={handleInputChange}\n        placeholder=\"Enter data\"\n      />\n      <button onClick={setDataOnChain}>Set Data</button>\n      {/* Log data state just before rendering */}\n      {console.log('Data state:', data)}\n    </div>\n  );\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}