{"ast":null,"code":"var _jsxFileName = \"/home/shri/projects/blockchain-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleStorageABI = require('./SimpleStorage.json');\nconst ganacheUrl = 'http://127.0.0.1:7545';\nconst SimpleStorageAddress = '0x63631549432302123d49d3093499790e26ca27eA';\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(ganacheUrl);\n        const web3Instance = new Web3(provider);\n        setWeb3(web3Instance);\n        const simpleStorageContract = new web3Instance.eth.Contract(SimpleStorageABI, SimpleStorageAddress);\n        setContract(simpleStorageContract);\n        console.log('Connected to blockchain network');\n      } catch (error) {\n        console.error('Error initializing web3:', error);\n      }\n    };\n    initializeWeb3();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const result = await contract.methods.getData().call();\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const setDataOnChain = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.setData(123).send({\n        from: accounts[0]\n      });\n      fetchData();\n    } catch (error) {\n      console.error('Error setting data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data from Smart Contract: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setDataOnChain,\n      children: \"Set Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9zWAEdB7KXsPZt9TJDOho2/a7uw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","SimpleStorageABI","require","ganacheUrl","SimpleStorageAddress","App","_s","data","setData","web3","setWeb3","contract","setContract","initializeWeb3","provider","providers","HttpProvider","web3Instance","simpleStorageContract","eth","Contract","console","log","error","fetchData","result","methods","getData","call","setDataOnChain","accounts","getAccounts","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shri/projects/blockchain-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nconst SimpleStorageABI = require('./SimpleStorage.json');\n\nconst ganacheUrl = 'http://127.0.0.1:7545';\nconst SimpleStorageAddress = '0x63631549432302123d49d3093499790e26ca27eA';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(ganacheUrl);\n        const web3Instance = new Web3(provider);\n        setWeb3(web3Instance);\n        const simpleStorageContract = new web3Instance.eth.Contract(\n          SimpleStorageABI,\n          SimpleStorageAddress\n        );\n        setContract(simpleStorageContract);\n\n        console.log('Connected to blockchain network'); \n      } catch (error) {\n        console.error('Error initializing web3:', error);\n      }\n    };\n    initializeWeb3();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const result = await contract.methods.getData().call();\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const setDataOnChain = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.setData(123).send({ from: accounts[0] });\n      fetchData(); \n    } catch (error) {\n      console.error('Error setting data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Blockchain App</h1>\n      <button onClick={fetchData}>Fetch Data</button>\n      <p>Data from Smart Contract: {data}</p>\n      <button onClick={setDataOnChain}>Set Data</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}